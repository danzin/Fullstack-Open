{"ast":null,"code":"var _jsxFileName = \"/home/scape/Kino/Software/SoftProjects/Fullstack-Open/part1/part1_c/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Give feedback here\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 27\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 22\n}, this);\n_c = Header;\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n_c2 = Button;\nconst StatisticLine = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n    children: [\" \", props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 29\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n_c3 = StatisticLine;\nconst Stats = _ref2 => {\n  let {\n    good,\n    bad,\n    neutral\n  } = _ref2;\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"No reviews yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  const all = good + neutral + bad;\n  const average = (good - bad) / (good + bad + neutral);\n  const positive = good / (good + bad + neutral) * 100;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive %\",\n      value: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Stats;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: 'good'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: 'neutral'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: 'bad'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"StatisticLine\");\n$RefreshReg$(_c4, \"Stats\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","Header","Button","handleClick","text","StatisticLine","props","value","Stats","good","bad","neutral","all","average","positive","App","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick"],"sources":["/home/scape/Kino/Software/SoftProjects/Fullstack-Open/part1/part1_c/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Header = () => <div><h1>Give feedback here</h1></div>\n\nconst Button = ({ handleClick, text }) =>  \n  <button onClick={handleClick}>{text}</button>\n\nconst StatisticLine = (props) => \n\n  <tr><th>{props.text}</th> <th> {props.value}</th></tr>\n\n\nconst Stats = ({good, bad, neutral}) => {\n  if(good == 0 && neutral == 0 && bad ==0 ){\n    return (\n      <h4>No reviews yet.</h4>\n    )\n  }\n  const all = good+neutral+bad\n  const average = (good - bad)/(good+bad+neutral)\n  const positive = good/(good+bad+neutral)*100\n  return(\n   \n      \n    <table>\n      <StatisticLine text=\"good\" value = {good} />\n      <StatisticLine text=\"neutral\" value = {neutral} />\n      <StatisticLine text=\"bad\" value = {bad} />\n      <StatisticLine text=\"all\" value = {all} />\n      <StatisticLine text=\"average\" value={average}/>\n      <StatisticLine text=\"positive %\" value = {positive} />\n    </table>\n      \n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n  }\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n  }\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n\n  return (\n    <div>\n      <Header />\n      <Button handleClick={handleGoodClick} text={'good'}/>\n      <Button handleClick={handleNeutralClick} text={'neutral'}/> \n      <Button handleClick={handleBadClick} text={'bad'}/> \n      <Stats good={good} neutral={neutral} bad={bad}/>\n      \n    </div>\n  )\n}\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}