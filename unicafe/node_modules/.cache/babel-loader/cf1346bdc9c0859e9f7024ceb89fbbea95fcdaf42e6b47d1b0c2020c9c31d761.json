{"ast":null,"code":"var _jsxFileName = \"/home/scape/Kino/Software/SoftProjects/Fullstack-Open/part1/part1_c/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Give feedback here\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 27\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 22\n}, this);\n\n// const History = (props) => {\n//   if(props.allClicks.length === 0){\n//     return(\n//     <div>The app is used by pressing the buttons</div>\n//     )\n//   }\n//   return(\n//     <div>Button press history: {props.allClicks.join(' ')}</div>\n//   )\n// }\n_c = Header;\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n};\n_c2 = Button;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGoodClick = () => {\n    let newClick = {\n      ...good,\n      good: good + 1\n    };\n    setGood(good + 1);\n  };\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: 'good'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: 'neutral'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: 'bad'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c3 = App;\nexport default App;\n// const App = () => {\n//   // save clicks of each button to its own state\n//   const [good, setGood] = useState(0)\n//   const [neutral, setNeutral] = useState(0)\n//   const [bad, setBad] = useState(0)\n\n//   return (\n//     <div>\n//       code here\n//     </div>\n//   )\n// }\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","Header","Button","handleClick","text","App","good","setGood","neutral","setNeutral","bad","setBad","handleGoodClick","newClick","handleNeutralClick","handleBadClick"],"sources":["/home/scape/Kino/Software/SoftProjects/Fullstack-Open/part1/part1_c/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Header = () => <div><h1>Give feedback here</h1></div>\n\n// const History = (props) => {\n//   if(props.allClicks.length === 0){\n//     return(\n//     <div>The app is used by pressing the buttons</div>\n//     )\n//   }\n//   return(\n//     <div>Button press history: {props.allClicks.join(' ')}</div>\n//   )\n// }\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    let newClick = {\n      ...good, good: good + 1\n    }\n    setGood(good + 1)\n  }\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n  }\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n  return (\n    <div>\n      <Header />\n\n       <Button handleClick={handleGoodClick} text={'good'}/>\n      <Button handleClick={handleNeutralClick} text={'neutral'}/> \n      <Button handleClick={handleBadClick} text={'bad'}/> \n      \n    </div>\n  )\n}\nexport default App\n// const App = () => {\n//   // save clicks of each button to its own state\n//   const [good, setGood] = useState(0)\n//   const [neutral, setNeutral] = useState(0)\n//   const [bad, setBad] = useState(0)\n\n//   return (\n//     <div>\n//       code here\n//     </div>\n//   )\n// }\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAEhC,MAAMC,MAAM,GAAG,mBAAM;EAAA,uBAAK;IAAA,UAAI;EAAkB;IAAA;IAAA;IAAA;EAAA;AAAK;EAAA;EAAA;EAAA;AAAA,QAAM;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KAXMA,MAAM;AAYZ,MAAMC,MAAM,GAAG;EAAA,IAAC;IAAEC,WAAW;IAAEC;EAAK,CAAC;EAAA,oBACnC;IAAQ,OAAO,EAAED,WAAY;IAAA,UAC1BC;EAAI;IAAA;IAAA;IAAA;EAAA,QACE;AAAA,CACV;AAAA,MAJKF,MAAM;AAOZ,MAAMG,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMY,eAAe,GAAG,MAAM;IAC5B,IAAIC,QAAQ,GAAG;MACb,GAAGP,IAAI;MAAEA,IAAI,EAAEA,IAAI,GAAG;IACxB,CAAC;IACDC,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACnB,CAAC;EACD,MAAMQ,kBAAkB,GAAG,MAAM;IAC/BL,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACzB,CAAC;EACD,MAAMO,cAAc,GAAG,MAAM;IAC3BJ,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;EACjB,CAAC;EACD,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAET,QAAC,MAAM;MAAC,WAAW,EAAEE,eAAgB;MAAC,IAAI,EAAE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACtD,QAAC,MAAM;MAAC,WAAW,EAAEE,kBAAmB;MAAC,IAAI,EAAE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAC3D,QAAC,MAAM;MAAC,WAAW,EAAEC,cAAe;MAAC,IAAI,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAE/C;AAEV,CAAC;AAAA,GA3BKV,GAAG;AAAA,MAAHA,GAAG;AA4BT,eAAeA,GAAG;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}